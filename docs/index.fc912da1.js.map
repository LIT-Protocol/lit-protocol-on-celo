{"mappings":"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","sources":["node_modules/@noble/bls12-381/index.js","node_modules/@noble/bls12-381/math.js","web/app.js"],"sourcesContent":["\"use strict\";\n/*! noble-bls12-381 - MIT License (c) Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyBatch = exports.aggregateSignatures = exports.aggregatePublicKeys = exports.verify = exports.sign = exports.getPublicKey = exports.pairing = exports.PointG2 = exports.PointG1 = exports.utils = exports.CURVE = exports.Fp12 = exports.Fp2 = exports.Fr = exports.Fp = void 0;\nconst math_1 = require(\"./math\");\nObject.defineProperty(exports, \"Fp\", { enumerable: true, get: function () { return math_1.Fp; } });\nObject.defineProperty(exports, \"Fr\", { enumerable: true, get: function () { return math_1.Fr; } });\nObject.defineProperty(exports, \"Fp2\", { enumerable: true, get: function () { return math_1.Fp2; } });\nObject.defineProperty(exports, \"Fp12\", { enumerable: true, get: function () { return math_1.Fp12; } });\nObject.defineProperty(exports, \"CURVE\", { enumerable: true, get: function () { return math_1.CURVE; } });\nconst POW_2_381 = 2n ** 381n;\nconst POW_2_382 = POW_2_381 * 2n;\nconst POW_2_383 = POW_2_382 * 2n;\nconst PUBLIC_KEY_LENGTH = 48;\nconst SHA256_DIGEST_SIZE = 32;\nconst htfDefaults = {\n    DST: 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_',\n    p: math_1.CURVE.P,\n    m: 2,\n    k: 128,\n    expand: true,\n};\nfunction isWithinCurveOrder(num) {\n    return 0 < num && num < math_1.CURVE.r;\n}\nconst crypto = (() => {\n    const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';\n    return {\n        node: nodeRequire && !webCrypto ? require('crypto') : undefined,\n        web: webCrypto,\n    };\n})();\nexports.utils = {\n    hashToField: hash_to_field,\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 8;\n        while (i--) {\n            const b32 = exports.utils.randomBytes(32);\n            const num = bytesToNumberBE(b32);\n            if (isWithinCurveOrder(num) && num !== 1n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 8 iterations. PRNG is broken');\n    },\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    mod: math_1.mod,\n    getDSTLabel() {\n        return htfDefaults.DST;\n    },\n    setDSTLabel(newLabel) {\n        if (typeof newLabel !== 'string' || newLabel.length > 2048 || newLabel.length === 0) {\n            throw new TypeError('Invalid DST');\n        }\n        htfDefaults.DST = newLabel;\n    },\n};\nfunction bytesToNumberBE(bytes) {\n    let value = 0n;\n    for (let i = bytes.length - 1, j = 0; i >= 0; i--, j++) {\n        value += (BigInt(bytes[i]) & 255n) << (8n * BigInt(j));\n    }\n    return value;\n}\nfunction bytesToHex(uint8a) {\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += uint8a[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n    }\n    return array;\n}\nfunction toPaddedHex(num, padding) {\n    if (num < 0n)\n        throw new Error('Expected valid number');\n    if (typeof padding !== 'number')\n        throw new TypeError('Expected valid padding');\n    return num.toString(16).padStart(padding * 2, '0');\n}\nfunction ensureBytes(hex) {\n    if (hex instanceof Uint8Array)\n        return hex;\n    if (typeof hex === 'string')\n        return hexToBytes(hex);\n    throw new TypeError('Expected hex string or Uint8Array');\n}\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction stringToBytes(str) {\n    const bytes = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n}\nfunction os2ip(bytes) {\n    let result = 0n;\n    for (let i = 0; i < bytes.length; i++) {\n        result <<= 8n;\n        result += BigInt(bytes[i]);\n    }\n    return result;\n}\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nasync function expand_message_xmd(msg, DST, lenInBytes) {\n    const H = exports.utils.sha256;\n    const b_in_bytes = SHA256_DIGEST_SIZE;\n    const r_in_bytes = b_in_bytes * 2;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2);\n    const b = new Array(ell);\n    const b_0 = await H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = await H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = await H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nasync function hash_to_field(msg, count, options = {}) {\n    const htfOptions = { ...htfDefaults, ...options };\n    const log2p = htfOptions.p.toString(2).length;\n    const L = Math.ceil((log2p + htfOptions.k) / 8);\n    const len_in_bytes = count * htfOptions.m * L;\n    const DST = stringToBytes(htfOptions.DST);\n    let pseudo_random_bytes = msg;\n    if (htfOptions.expand) {\n        pseudo_random_bytes = await expand_message_xmd(msg, DST, len_in_bytes);\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(htfOptions.m);\n        for (let j = 0; j < htfOptions.m; j++) {\n            const elm_offset = L * (j + i * htfOptions.m);\n            const tv = pseudo_random_bytes.slice(elm_offset, elm_offset + L);\n            e[j] = (0, math_1.mod)(os2ip(tv), htfOptions.p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nfunction normalizePrivKey(key) {\n    let int;\n    if (key instanceof Uint8Array && key.length === 32)\n        int = bytesToNumberBE(key);\n    else if (typeof key === 'string' && key.length === 64)\n        int = BigInt(`0x${key}`);\n    else if (typeof key === 'number' && key > 0 && Number.isSafeInteger(key))\n        int = BigInt(key);\n    else if (typeof key === 'bigint' && key > 0n)\n        int = key;\n    else\n        throw new TypeError('Expected valid private key');\n    int = (0, math_1.mod)(int, math_1.CURVE.r);\n    if (!isWithinCurveOrder(int))\n        throw new Error('Private key must be 0 < key < CURVE.r');\n    return int;\n}\nfunction assertType(item, type) {\n    if (!(item instanceof type))\n        throw new Error('Expected Fp* argument, not number/bigint');\n}\nclass PointG1 extends math_1.ProjectivePoint {\n    constructor(x, y, z = math_1.Fp.ONE) {\n        super(x, y, z, math_1.Fp);\n        assertType(x, math_1.Fp);\n        assertType(y, math_1.Fp);\n        assertType(z, math_1.Fp);\n    }\n    static fromHex(bytes) {\n        bytes = ensureBytes(bytes);\n        const { P } = math_1.CURVE;\n        let point;\n        if (bytes.length === 48) {\n            const compressedValue = bytesToNumberBE(bytes);\n            const bflag = (0, math_1.mod)(compressedValue, POW_2_383) / POW_2_382;\n            if (bflag === 1n) {\n                return this.ZERO;\n            }\n            const x = new math_1.Fp((0, math_1.mod)(compressedValue, POW_2_381));\n            const right = x.pow(3n).add(new math_1.Fp(math_1.CURVE.b));\n            let y = right.sqrt();\n            if (!y)\n                throw new Error('Invalid compressed G1 point');\n            const aflag = (0, math_1.mod)(compressedValue, POW_2_382) / POW_2_381;\n            if ((y.value * 2n) / P !== aflag)\n                y = y.negate();\n            point = new PointG1(x, y);\n        }\n        else if (bytes.length === 96) {\n            if ((bytes[0] & (1 << 6)) !== 0)\n                return PointG1.ZERO;\n            const x = bytesToNumberBE(bytes.slice(0, PUBLIC_KEY_LENGTH));\n            const y = bytesToNumberBE(bytes.slice(PUBLIC_KEY_LENGTH));\n            point = new PointG1(new math_1.Fp(x), new math_1.Fp(y));\n        }\n        else {\n            throw new Error('Invalid point G1, expected 48/96 bytes');\n        }\n        point.assertValidity();\n        return point;\n    }\n    static fromPrivateKey(privateKey) {\n        return this.BASE.multiplyPrecomputed(normalizePrivKey(privateKey));\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        this.assertValidity();\n        const { P } = math_1.CURVE;\n        if (isCompressed) {\n            let hex;\n            if (this.isZero()) {\n                hex = POW_2_383 + POW_2_382;\n            }\n            else {\n                const [x, y] = this.toAffine();\n                const flag = (y.value * 2n) / P;\n                hex = x.value + flag * POW_2_381 + POW_2_383;\n            }\n            return toPaddedHex(hex, PUBLIC_KEY_LENGTH);\n        }\n        else {\n            if (this.isZero()) {\n                return '4'.padEnd(2 * 2 * PUBLIC_KEY_LENGTH, '0');\n            }\n            else {\n                const [x, y] = this.toAffine();\n                return toPaddedHex(x.value, PUBLIC_KEY_LENGTH) + toPaddedHex(y.value, PUBLIC_KEY_LENGTH);\n            }\n        }\n    }\n    assertValidity() {\n        if (this.isZero())\n            return this;\n        if (!this.isOnCurve())\n            throw new Error('Invalid G1 point: not on curve Fp');\n        if (!this.isTorsionFree())\n            throw new Error('Invalid G1 point: must be of prime-order subgroup');\n        return this;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n    millerLoop(P) {\n        return (0, math_1.millerLoop)(P.pairingPrecomputes(), this.toAffine());\n    }\n    clearCofactor() {\n        return this.multiplyUnsafe(math_1.CURVE.h);\n    }\n    isOnCurve() {\n        const b = new math_1.Fp(math_1.CURVE.b);\n        const { x, y, z } = this;\n        const left = y.pow(2n).multiply(z).subtract(x.pow(3n));\n        const right = b.multiply(z.pow(3n));\n        return left.subtract(right).isZero();\n    }\n    sigma() {\n        const BETA = 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn;\n        const [x, y] = this.toAffine();\n        return new PointG1(x.multiply(BETA), y);\n    }\n    isTorsionFree() {\n        const c1 = 0x396c8c005555e1560000000055555555n;\n        const P = this;\n        const S = P.sigma();\n        const Q = S.double();\n        const S2 = S.sigma();\n        const left = Q.subtract(P).subtract(S2).multiplyUnsafe(c1);\n        const C = left.subtract(S2);\n        return C.isZero();\n    }\n}\nexports.PointG1 = PointG1;\nPointG1.BASE = new PointG1(new math_1.Fp(math_1.CURVE.Gx), new math_1.Fp(math_1.CURVE.Gy), math_1.Fp.ONE);\nPointG1.ZERO = new PointG1(math_1.Fp.ONE, math_1.Fp.ONE, math_1.Fp.ZERO);\nclass PointG2 extends math_1.ProjectivePoint {\n    constructor(x, y, z = math_1.Fp2.ONE) {\n        super(x, y, z, math_1.Fp2);\n        assertType(x, math_1.Fp2);\n        assertType(y, math_1.Fp2);\n        assertType(z, math_1.Fp2);\n    }\n    static async hashToCurve(msg) {\n        msg = ensureBytes(msg);\n        const u = await hash_to_field(msg, 2);\n        const Q0 = new PointG2(...(0, math_1.isogenyMapG2)((0, math_1.map_to_curve_simple_swu_9mod16)(u[0])));\n        const Q1 = new PointG2(...(0, math_1.isogenyMapG2)((0, math_1.map_to_curve_simple_swu_9mod16)(u[1])));\n        const R = Q0.add(Q1);\n        const P = R.clearCofactor();\n        return P;\n    }\n    static fromSignature(hex) {\n        hex = ensureBytes(hex);\n        const { P } = math_1.CURVE;\n        const half = hex.length / 2;\n        if (half !== 48 && half !== 96)\n            throw new Error('Invalid compressed signature length, must be 96 or 192');\n        const z1 = bytesToNumberBE(hex.slice(0, half));\n        const z2 = bytesToNumberBE(hex.slice(half));\n        const bflag1 = (0, math_1.mod)(z1, POW_2_383) / POW_2_382;\n        if (bflag1 === 1n)\n            return this.ZERO;\n        const x1 = z1 % POW_2_381;\n        const x2 = z2;\n        const x = new math_1.Fp2([x2, x1]);\n        const y2 = x.pow(3n).add(new math_1.Fp2(math_1.CURVE.b2));\n        let y = y2.sqrt();\n        if (!y)\n            throw new Error('Failed to find a square root');\n        const [y0, y1] = y.values;\n        const aflag1 = (z1 % POW_2_382) / POW_2_381;\n        const isGreater = y1 > 0n && (y1 * 2n) / P !== aflag1;\n        const isZero = y1 === 0n && (y0 * 2n) / P !== aflag1;\n        if (isGreater || isZero)\n            y = y.multiply(-1n);\n        const point = new PointG2(x, y, math_1.Fp2.ONE);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(bytes) {\n        bytes = ensureBytes(bytes);\n        let point;\n        if (bytes.length === 96) {\n            throw new Error('Compressed format not supported yet.');\n        }\n        else if (bytes.length === 192) {\n            if ((bytes[0] & (1 << 6)) !== 0) {\n                return PointG2.ZERO;\n            }\n            const x1 = bytesToNumberBE(bytes.slice(0, PUBLIC_KEY_LENGTH));\n            const x0 = bytesToNumberBE(bytes.slice(PUBLIC_KEY_LENGTH, 2 * PUBLIC_KEY_LENGTH));\n            const y1 = bytesToNumberBE(bytes.slice(2 * PUBLIC_KEY_LENGTH, 3 * PUBLIC_KEY_LENGTH));\n            const y0 = bytesToNumberBE(bytes.slice(3 * PUBLIC_KEY_LENGTH));\n            point = new PointG2(new math_1.Fp2([x0, x1]), new math_1.Fp2([y0, y1]));\n        }\n        else {\n            throw new Error('Invalid uncompressed point G2, expected 192 bytes');\n        }\n        point.assertValidity();\n        return point;\n    }\n    static fromPrivateKey(privateKey) {\n        return this.BASE.multiplyPrecomputed(normalizePrivKey(privateKey));\n    }\n    toSignature() {\n        if (this.equals(PointG2.ZERO)) {\n            const sum = POW_2_383 + POW_2_382;\n            return toPaddedHex(sum, PUBLIC_KEY_LENGTH) + toPaddedHex(0n, PUBLIC_KEY_LENGTH);\n        }\n        const [[x0, x1], [y0, y1]] = this.toAffine().map((a) => a.values);\n        const tmp = y1 > 0n ? y1 * 2n : y0 * 2n;\n        const aflag1 = tmp / math_1.CURVE.P;\n        const z1 = x1 + aflag1 * POW_2_381 + POW_2_383;\n        const z2 = x0;\n        return toPaddedHex(z1, PUBLIC_KEY_LENGTH) + toPaddedHex(z2, PUBLIC_KEY_LENGTH);\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        this.assertValidity();\n        if (isCompressed) {\n            throw new Error('Point compression has not yet been implemented');\n        }\n        else {\n            if (this.equals(PointG2.ZERO)) {\n                return '4'.padEnd(2 * 4 * PUBLIC_KEY_LENGTH, '0');\n            }\n            const [[x0, x1], [y0, y1]] = this.toAffine().map((a) => a.values);\n            return (toPaddedHex(x1, PUBLIC_KEY_LENGTH) +\n                toPaddedHex(x0, PUBLIC_KEY_LENGTH) +\n                toPaddedHex(y1, PUBLIC_KEY_LENGTH) +\n                toPaddedHex(y0, PUBLIC_KEY_LENGTH));\n        }\n    }\n    assertValidity() {\n        if (this.isZero())\n            return this;\n        if (!this.isOnCurve())\n            throw new Error('Invalid G2 point: not on curve Fp2');\n        if (!this.isTorsionFree())\n            throw new Error('Invalid G2 point: must be of prime-order subgroup');\n        return this;\n    }\n    psi() {\n        return this.fromAffineTuple((0, math_1.psi)(...this.toAffine()));\n    }\n    psi2() {\n        return this.fromAffineTuple((0, math_1.psi2)(...this.toAffine()));\n    }\n    mulNegX() {\n        return this.multiplyUnsafe(math_1.CURVE.x).negate();\n    }\n    clearCofactor() {\n        const P = this;\n        let t1 = P.mulNegX();\n        let t2 = P.psi();\n        let t3 = P.double();\n        t3 = t3.psi2();\n        t3 = t3.subtract(t2);\n        t2 = t1.add(t2);\n        t2 = t2.mulNegX();\n        t3 = t3.add(t2);\n        t3 = t3.subtract(t1);\n        const Q = t3.subtract(P);\n        return Q;\n    }\n    isOnCurve() {\n        const b = new math_1.Fp2(math_1.CURVE.b2);\n        const { x, y, z } = this;\n        const left = y.pow(2n).multiply(z).subtract(x.pow(3n));\n        const right = b.multiply(z.pow(3n));\n        return left.subtract(right).isZero();\n    }\n    isTorsionFree() {\n        const P = this;\n        const psi2 = P.psi2();\n        const psi3 = psi2.psi();\n        const zPsi3 = psi3.mulNegX();\n        return zPsi3.subtract(psi2).add(P).isZero();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n    clearPairingPrecomputes() {\n        this._PPRECOMPUTES = undefined;\n    }\n    pairingPrecomputes() {\n        if (this._PPRECOMPUTES)\n            return this._PPRECOMPUTES;\n        this._PPRECOMPUTES = (0, math_1.calcPairingPrecomputes)(...this.toAffine());\n        return this._PPRECOMPUTES;\n    }\n}\nexports.PointG2 = PointG2;\nPointG2.BASE = new PointG2(new math_1.Fp2(math_1.CURVE.G2x), new math_1.Fp2(math_1.CURVE.G2y), math_1.Fp2.ONE);\nPointG2.ZERO = new PointG2(math_1.Fp2.ONE, math_1.Fp2.ONE, math_1.Fp2.ZERO);\nfunction pairing(P, Q, withFinalExponent = true) {\n    if (P.isZero() || Q.isZero())\n        throw new Error('No pairings at point of Infinity');\n    P.assertValidity();\n    Q.assertValidity();\n    const looped = P.millerLoop(Q);\n    return withFinalExponent ? looped.finalExponentiate() : looped;\n}\nexports.pairing = pairing;\nfunction normP1(point) {\n    return point instanceof PointG1 ? point : PointG1.fromHex(point);\n}\nfunction normP2(point) {\n    return point instanceof PointG2 ? point : PointG2.fromSignature(point);\n}\nasync function normP2Hash(point) {\n    return point instanceof PointG2 ? point : PointG2.hashToCurve(point);\n}\nfunction getPublicKey(privateKey) {\n    const bytes = PointG1.fromPrivateKey(privateKey).toRawBytes(true);\n    return typeof privateKey === 'string' ? bytesToHex(bytes) : bytes;\n}\nexports.getPublicKey = getPublicKey;\nasync function sign(message, privateKey) {\n    const msgPoint = await normP2Hash(message);\n    msgPoint.assertValidity();\n    const sigPoint = msgPoint.multiply(normalizePrivKey(privateKey));\n    if (message instanceof PointG2)\n        return sigPoint;\n    const hex = sigPoint.toSignature();\n    return typeof message === 'string' ? hex : hexToBytes(hex);\n}\nexports.sign = sign;\nasync function verify(signature, message, publicKey) {\n    const P = normP1(publicKey);\n    const Hm = await normP2Hash(message);\n    const G = PointG1.BASE;\n    const S = normP2(signature);\n    const ePHm = pairing(P.negate(), Hm, false);\n    const eGS = pairing(G, S, false);\n    const exp = eGS.multiply(ePHm).finalExponentiate();\n    return exp.equals(math_1.Fp12.ONE);\n}\nexports.verify = verify;\nfunction aggregatePublicKeys(publicKeys) {\n    if (!publicKeys.length)\n        throw new Error('Expected non-empty array');\n    const agg = publicKeys.map(normP1).reduce((sum, p) => sum.add(p), PointG1.ZERO);\n    if (publicKeys[0] instanceof PointG1)\n        return agg.assertValidity();\n    const bytes = agg.toRawBytes(true);\n    if (publicKeys[0] instanceof Uint8Array)\n        return bytes;\n    return bytesToHex(bytes);\n}\nexports.aggregatePublicKeys = aggregatePublicKeys;\nfunction aggregateSignatures(signatures) {\n    if (!signatures.length)\n        throw new Error('Expected non-empty array');\n    const agg = signatures.map(normP2).reduce((sum, s) => sum.add(s), PointG2.ZERO);\n    if (signatures[0] instanceof PointG2)\n        return agg.assertValidity();\n    const bytes = agg.toSignature();\n    if (signatures[0] instanceof Uint8Array)\n        return hexToBytes(bytes);\n    return bytes;\n}\nexports.aggregateSignatures = aggregateSignatures;\nasync function verifyBatch(signature, messages, publicKeys) {\n    if (!messages.length)\n        throw new Error('Expected non-empty messages array');\n    if (publicKeys.length !== messages.length)\n        throw new Error('Pubkey count should equal msg count');\n    const sig = normP2(signature);\n    const nMessages = await Promise.all(messages.map(normP2Hash));\n    const nPublicKeys = publicKeys.map(normP1);\n    try {\n        const paired = [];\n        for (const message of new Set(nMessages)) {\n            const groupPublicKey = nMessages.reduce((groupPublicKey, subMessage, i) => subMessage === message ? groupPublicKey.add(nPublicKeys[i]) : groupPublicKey, PointG1.ZERO);\n            paired.push(pairing(groupPublicKey, message, false));\n        }\n        paired.push(pairing(PointG1.BASE.negate(), sig, false));\n        const product = paired.reduce((a, b) => a.multiply(b), math_1.Fp12.ONE);\n        const exp = product.finalExponentiate();\n        return exp.equals(math_1.Fp12.ONE);\n    }\n    catch {\n        return false;\n    }\n}\nexports.verifyBatch = verifyBatch;\nPointG1.BASE.calcMultiplyPrecomputes(4);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.psi2 = exports.psi = exports.millerLoop = exports.calcPairingPrecomputes = exports.isogenyMapG2 = exports.map_to_curve_simple_swu_9mod16 = exports.ProjectivePoint = exports.Fp12 = exports.Fp6 = exports.Fp2 = exports.Fr = exports.Fp = exports.powMod = exports.mod = exports.CURVE = void 0;\nexports.CURVE = {\n    P: 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn,\n    r: 0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001n,\n    h: 0x396c8c005555e1568c00aaab0000aaabn,\n    Gx: 0x17f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bbn,\n    Gy: 0x08b3f481e3aaa0f1a09e30ed741d8ae4fcf5e095d5d00af600db18cb2c04b3edd03cc744a2888ae40caa232946c5e7e1n,\n    b: 4n,\n    P2: 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn **\n        2n -\n        1n,\n    h2: 0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5n,\n    G2x: [\n        0x024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb8n,\n        0x13e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7en,\n    ],\n    G2y: [\n        0x0ce5d527727d6e118cc9cdc6da2e351aadfd9baa8cbdd3a76d429a695160d12c923ac9cc3baca289e193548608b82801n,\n        0x0606c4a02ea734cc32acd2b02bc28b99cb3e287e85a763af267492ab572e99ab3f370d275cec1da1aaa9075ff05f79ben,\n    ],\n    b2: [4n, 4n],\n    x: 0xd201000000010000n,\n    h2Eff: 0xbc69f08f2ee75b3584c6a0ea91b352888e2a8e9145ad7689986ff031508ffe1329c2f178731db956d82bf015d1212b02ec0ec69d7477c1ae954cbc06689f6a359894c0adebbf6b4e8020005aaa95551n,\n};\nconst BLS_X_LEN = bitLen(exports.CURVE.x);\nfunction mod(a, b) {\n    const res = a % b;\n    return res >= 0n ? res : b + res;\n}\nexports.mod = mod;\nfunction powMod(a, power, modulo) {\n    let res = 1n;\n    while (power > 0n) {\n        if (power & 1n)\n            res = (res * a) % modulo;\n        a = (a * a) % modulo;\n        power >>= 1n;\n    }\n    return res;\n}\nexports.powMod = powMod;\nfunction genInvertBatch(cls, nums) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = cls.ONE;\n    for (let i = 0; i < len; i++) {\n        if (nums[i].isZero())\n            continue;\n        scratch[i] = acc;\n        acc = acc.multiply(nums[i]);\n    }\n    acc = acc.invert();\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i].isZero())\n            continue;\n        let tmp = acc.multiply(nums[i]);\n        nums[i] = acc.multiply(scratch[i]);\n        acc = tmp;\n    }\n    return nums;\n}\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > 0n; n >>= 1n, len += 1)\n        ;\n    return len;\n}\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & 1n;\n}\nfunction invert(number, modulo = exports.CURVE.P) {\n    if (number === 0n || modulo <= 0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let [x, y, u, v] = [0n, 1n, 1n, 0n];\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        [b, a] = [a, r];\n        [x, y] = [u, v];\n        [u, v] = [m, n];\n    }\n    const gcd = b;\n    if (gcd !== 1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nclass Fp {\n    constructor(value) {\n        this.value = mod(value, Fp.ORDER);\n    }\n    isZero() {\n        return this.value === 0n;\n    }\n    equals(rhs) {\n        return this.value === rhs.value;\n    }\n    negate() {\n        return new Fp(-this.value);\n    }\n    invert() {\n        return new Fp(invert(this.value, Fp.ORDER));\n    }\n    add(rhs) {\n        return new Fp(this.value + rhs.value);\n    }\n    square() {\n        return new Fp(this.value * this.value);\n    }\n    pow(n) {\n        return new Fp(powMod(this.value, n, Fp.ORDER));\n    }\n    sqrt() {\n        const root = this.pow((Fp.ORDER + 1n) / 4n);\n        if (!root.square().equals(this))\n            return;\n        return root;\n    }\n    subtract(rhs) {\n        return new Fp(this.value - rhs.value);\n    }\n    multiply(rhs) {\n        if (rhs instanceof Fp)\n            rhs = rhs.value;\n        return new Fp(this.value * rhs);\n    }\n    div(rhs) {\n        if (typeof rhs === 'bigint')\n            rhs = new Fp(rhs);\n        return this.multiply(rhs.invert());\n    }\n    toString() {\n        const str = this.value.toString(16).padStart(96, '0');\n        return str.slice(0, 2) + '.' + str.slice(-2);\n    }\n}\nexports.Fp = Fp;\nFp.ORDER = exports.CURVE.P;\nFp.MAX_BITS = bitLen(exports.CURVE.P);\nFp.ZERO = new Fp(0n);\nFp.ONE = new Fp(1n);\nclass Fr {\n    constructor(value) {\n        this.value = mod(value, Fr.ORDER);\n    }\n    static isValid(b) {\n        return b <= Fr.ORDER;\n    }\n    isZero() {\n        return this.value === 0n;\n    }\n    equals(rhs) {\n        return this.value === rhs.value;\n    }\n    negate() {\n        return new Fr(-this.value);\n    }\n    invert() {\n        return new Fr(invert(this.value, Fr.ORDER));\n    }\n    add(rhs) {\n        return new Fr(this.value + rhs.value);\n    }\n    square() {\n        return new Fr(this.value * this.value);\n    }\n    pow(n) {\n        return new Fr(powMod(this.value, n, Fr.ORDER));\n    }\n    subtract(rhs) {\n        return new Fr(this.value - rhs.value);\n    }\n    multiply(rhs) {\n        if (rhs instanceof Fr)\n            rhs = rhs.value;\n        return new Fr(this.value * rhs);\n    }\n    div(rhs) {\n        if (typeof rhs === 'bigint')\n            rhs = new Fr(rhs);\n        return this.multiply(rhs.invert());\n    }\n    legendre() {\n        return this.pow((Fr.ORDER - 1n) / 2n);\n    }\n    sqrt() {\n        if (!this.legendre().equals(Fr.ONE))\n            return;\n        const P = Fr.ORDER;\n        let q, s, z;\n        for (q = P - 1n, s = 0; q % 2n === 0n; q /= 2n, s++)\n            ;\n        if (s === 1)\n            return this.pow((P + 1n) / 4n);\n        for (z = 2n; z < P && new Fr(z).legendre().value !== P - 1n; z++)\n            ;\n        let c = powMod(z, q, P);\n        let r = powMod(this.value, (q + 1n) / 2n, P);\n        let t = powMod(this.value, q, P);\n        let t2 = 0n;\n        while (mod(t - 1n, P) !== 0n) {\n            t2 = mod(t * t, P);\n            let i;\n            for (i = 1; i < s; i++) {\n                if (mod(t2 - 1n, P) === 0n)\n                    break;\n                t2 = mod(t2 * t2, P);\n            }\n            let b = powMod(c, BigInt(1 << (s - i - 1)), P);\n            r = mod(r * b, P);\n            c = mod(b * b, P);\n            t = mod(t * c, P);\n            s = i;\n        }\n        return new Fr(r);\n    }\n    toString() {\n        return '0x' + this.value.toString(16).padStart(64, '0');\n    }\n}\nexports.Fr = Fr;\nFr.ORDER = exports.CURVE.r;\nFr.ZERO = new Fr(0n);\nFr.ONE = new Fr(1n);\nclass FQP {\n    zip(rhs, mapper) {\n        const c0 = this.c;\n        const c1 = rhs.c;\n        const res = [];\n        for (let i = 0; i < c0.length; i++) {\n            res.push(mapper(c0[i], c1[i]));\n        }\n        return res;\n    }\n    map(callbackfn) {\n        return this.c.map(callbackfn);\n    }\n    isZero() {\n        return this.c.every((c) => c.isZero());\n    }\n    equals(rhs) {\n        return this.zip(rhs, (left, right) => left.equals(right)).every((r) => r);\n    }\n    negate() {\n        return this.init(this.map((c) => c.negate()));\n    }\n    add(rhs) {\n        return this.init(this.zip(rhs, (left, right) => left.add(right)));\n    }\n    subtract(rhs) {\n        return this.init(this.zip(rhs, (left, right) => left.subtract(right)));\n    }\n    conjugate() {\n        return this.init([this.c[0], this.c[1].negate()]);\n    }\n    one() {\n        const el = this;\n        let one;\n        if (el instanceof Fp2)\n            one = Fp2.ONE;\n        if (el instanceof Fp6)\n            one = Fp6.ONE;\n        if (el instanceof Fp12)\n            one = Fp12.ONE;\n        return one;\n    }\n    pow(n) {\n        const elm = this;\n        const one = this.one();\n        if (n === 0n)\n            return one;\n        if (n === 1n)\n            return elm;\n        let p = one;\n        let d = elm;\n        while (n > 0n) {\n            if (n & 1n)\n                p = p.multiply(d);\n            n >>= 1n;\n            d = d.square();\n        }\n        return p;\n    }\n    div(rhs) {\n        const inv = typeof rhs === 'bigint' ? new Fp(rhs).invert().value : rhs.invert();\n        return this.multiply(inv);\n    }\n}\nclass Fp2 extends FQP {\n    constructor(coeffs) {\n        super();\n        if (coeffs.length !== 2)\n            throw new Error(`Expected array with 2 elements`);\n        coeffs.forEach((c, i) => {\n            if (typeof c === 'bigint')\n                coeffs[i] = new Fp(c);\n        });\n        this.c = coeffs;\n    }\n    init(tuple) {\n        return new Fp2(tuple);\n    }\n    toString() {\n        return `Fp2(${this.c[0]} + ${this.c[1]}×i)`;\n    }\n    get values() {\n        return this.c.map((c) => c.value);\n    }\n    multiply(rhs) {\n        if (typeof rhs === 'bigint')\n            return new Fp2(this.map((c) => c.multiply(rhs)));\n        const [c0, c1] = this.c;\n        const [r0, r1] = rhs.c;\n        let t1 = c0.multiply(r0);\n        let t2 = c1.multiply(r1);\n        return new Fp2([t1.subtract(t2), c0.add(c1).multiply(r0.add(r1)).subtract(t1.add(t2))]);\n    }\n    mulByNonresidue() {\n        const c0 = this.c[0];\n        const c1 = this.c[1];\n        return new Fp2([c0.subtract(c1), c0.add(c1)]);\n    }\n    square() {\n        const c0 = this.c[0];\n        const c1 = this.c[1];\n        const a = c0.add(c1);\n        const b = c0.subtract(c1);\n        const c = c0.add(c0);\n        return new Fp2([a.multiply(b), c.multiply(c1)]);\n    }\n    sqrt() {\n        const candidateSqrt = this.pow((Fp2.ORDER + 8n) / 16n);\n        const check = candidateSqrt.square().div(this);\n        const R = FP2_ROOTS_OF_UNITY;\n        const divisor = [R[0], R[2], R[4], R[6]].find((r) => r.equals(check));\n        if (!divisor)\n            return;\n        const index = R.indexOf(divisor);\n        const root = R[index / 2];\n        if (!root)\n            throw new Error('Invalid root');\n        const x1 = candidateSqrt.div(root);\n        const x2 = x1.negate();\n        const [re1, im1] = x1.values;\n        const [re2, im2] = x2.values;\n        if (im1 > im2 || (im1 === im2 && re1 > re2))\n            return x1;\n        return x2;\n    }\n    invert() {\n        const [a, b] = this.values;\n        const factor = new Fp(a * a + b * b).invert();\n        return new Fp2([factor.multiply(new Fp(a)), factor.multiply(new Fp(-b))]);\n    }\n    frobeniusMap(power) {\n        return new Fp2([this.c[0], this.c[1].multiply(FP2_FROBENIUS_COEFFICIENTS[power % 2])]);\n    }\n    multiplyByB() {\n        let [c0, c1] = this.c;\n        let t0 = c0.multiply(4n);\n        let t1 = c1.multiply(4n);\n        return new Fp2([t0.subtract(t1), t0.add(t1)]);\n    }\n}\nexports.Fp2 = Fp2;\nFp2.ORDER = exports.CURVE.P2;\nFp2.MAX_BITS = bitLen(exports.CURVE.P2);\nFp2.ZERO = new Fp2([0n, 0n]);\nFp2.ONE = new Fp2([1n, 0n]);\nclass Fp6 extends FQP {\n    constructor(c) {\n        super();\n        this.c = c;\n        if (c.length !== 3)\n            throw new Error(`Expected array with 3 elements`);\n    }\n    static fromTuple(t) {\n        if (!Array.isArray(t) || t.length !== 6)\n            throw new Error('Invalid Fp6 usage');\n        return new Fp6([new Fp2(t.slice(0, 2)), new Fp2(t.slice(2, 4)), new Fp2(t.slice(4, 6))]);\n    }\n    init(triple) {\n        return new Fp6(triple);\n    }\n    toString() {\n        return `Fp6(${this.c[0]} + ${this.c[1]} * v, ${this.c[2]} * v^2)`;\n    }\n    conjugate() {\n        throw new TypeError('No conjugate on Fp6');\n    }\n    multiply(rhs) {\n        if (typeof rhs === 'bigint')\n            return new Fp6([this.c[0].multiply(rhs), this.c[1].multiply(rhs), this.c[2].multiply(rhs)]);\n        let [c0, c1, c2] = this.c;\n        const [r0, r1, r2] = rhs.c;\n        let t0 = c0.multiply(r0);\n        let t1 = c1.multiply(r1);\n        let t2 = c2.multiply(r2);\n        return new Fp6([\n            t0.add(c1.add(c2).multiply(r1.add(r2)).subtract(t1.add(t2)).mulByNonresidue()),\n            c0.add(c1).multiply(r0.add(r1)).subtract(t0.add(t1)).add(t2.mulByNonresidue()),\n            t1.add(c0.add(c2).multiply(r0.add(r2)).subtract(t0.add(t2))),\n        ]);\n    }\n    mulByNonresidue() {\n        return new Fp6([this.c[2].mulByNonresidue(), this.c[0], this.c[1]]);\n    }\n    multiplyBy1(b1) {\n        return new Fp6([\n            this.c[2].multiply(b1).mulByNonresidue(),\n            this.c[0].multiply(b1),\n            this.c[1].multiply(b1),\n        ]);\n    }\n    multiplyBy01(b0, b1) {\n        let [c0, c1, c2] = this.c;\n        let t0 = c0.multiply(b0);\n        let t1 = c1.multiply(b1);\n        return new Fp6([\n            c1.add(c2).multiply(b1).subtract(t1).mulByNonresidue().add(t0),\n            b0.add(b1).multiply(c0.add(c1)).subtract(t0).subtract(t1),\n            c0.add(c2).multiply(b0).subtract(t0).add(t1),\n        ]);\n    }\n    multiplyByFp2(rhs) {\n        return new Fp6(this.map((c) => c.multiply(rhs)));\n    }\n    square() {\n        let [c0, c1, c2] = this.c;\n        let t0 = c0.square();\n        let t1 = c0.multiply(c1).multiply(2n);\n        let t3 = c1.multiply(c2).multiply(2n);\n        let t4 = c2.square();\n        return new Fp6([\n            t3.mulByNonresidue().add(t0),\n            t4.mulByNonresidue().add(t1),\n            t1.add(c0.subtract(c1).add(c2).square()).add(t3).subtract(t0).subtract(t4),\n        ]);\n    }\n    invert() {\n        let [c0, c1, c2] = this.c;\n        let t0 = c0.square().subtract(c2.multiply(c1).mulByNonresidue());\n        let t1 = c2.square().mulByNonresidue().subtract(c0.multiply(c1));\n        let t2 = c1.square().subtract(c0.multiply(c2));\n        let t4 = c2.multiply(t1).add(c1.multiply(t2)).mulByNonresidue().add(c0.multiply(t0)).invert();\n        return new Fp6([t4.multiply(t0), t4.multiply(t1), t4.multiply(t2)]);\n    }\n    frobeniusMap(power) {\n        return new Fp6([\n            this.c[0].frobeniusMap(power),\n            this.c[1].frobeniusMap(power).multiply(FP6_FROBENIUS_COEFFICIENTS_1[power % 6]),\n            this.c[2].frobeniusMap(power).multiply(FP6_FROBENIUS_COEFFICIENTS_2[power % 6]),\n        ]);\n    }\n}\nexports.Fp6 = Fp6;\nFp6.ZERO = new Fp6([Fp2.ZERO, Fp2.ZERO, Fp2.ZERO]);\nFp6.ONE = new Fp6([Fp2.ONE, Fp2.ZERO, Fp2.ZERO]);\nclass Fp12 extends FQP {\n    constructor(c) {\n        super();\n        this.c = c;\n        if (c.length !== 2)\n            throw new Error(`Expected array with 2 elements`);\n    }\n    static fromTuple(t) {\n        return new Fp12([\n            Fp6.fromTuple(t.slice(0, 6)),\n            Fp6.fromTuple(t.slice(6, 12)),\n        ]);\n    }\n    init(c) {\n        return new Fp12(c);\n    }\n    toString() {\n        return `Fp12(${this.c[0]} + ${this.c[1]} * w)`;\n    }\n    multiply(rhs) {\n        if (typeof rhs === 'bigint')\n            return new Fp12([this.c[0].multiply(rhs), this.c[1].multiply(rhs)]);\n        let [c0, c1] = this.c;\n        const [r0, r1] = rhs.c;\n        let t1 = c0.multiply(r0);\n        let t2 = c1.multiply(r1);\n        return new Fp12([\n            t1.add(t2.mulByNonresidue()),\n            c0.add(c1).multiply(r0.add(r1)).subtract(t1.add(t2)),\n        ]);\n    }\n    multiplyBy014(o0, o1, o4) {\n        let [c0, c1] = this.c;\n        let [t0, t1] = [c0.multiplyBy01(o0, o1), c1.multiplyBy1(o4)];\n        return new Fp12([\n            t1.mulByNonresidue().add(t0),\n            c1.add(c0).multiplyBy01(o0, o1.add(o4)).subtract(t0).subtract(t1),\n        ]);\n    }\n    multiplyByFp2(rhs) {\n        return this.init(this.map((c) => c.multiplyByFp2(rhs)));\n    }\n    square() {\n        let [c0, c1] = this.c;\n        let ab = c0.multiply(c1);\n        return new Fp12([\n            c1.mulByNonresidue().add(c0).multiply(c0.add(c1)).subtract(ab).subtract(ab.mulByNonresidue()),\n            ab.add(ab),\n        ]);\n    }\n    invert() {\n        let [c0, c1] = this.c;\n        let t = c0.square().subtract(c1.square().mulByNonresidue()).invert();\n        return new Fp12([c0.multiply(t), c1.multiply(t).negate()]);\n    }\n    frobeniusMap(power) {\n        const [c0, c1] = this.c;\n        let r0 = c0.frobeniusMap(power);\n        let [c1_0, c1_1, c1_2] = c1.frobeniusMap(power).c;\n        const coeff = FP12_FROBENIUS_COEFFICIENTS[power % 12];\n        return new Fp12([\n            r0,\n            new Fp6([c1_0.multiply(coeff), c1_1.multiply(coeff), c1_2.multiply(coeff)]),\n        ]);\n    }\n    Fp4Square(a, b) {\n        const a2 = a.square(), b2 = b.square();\n        return [\n            b2.mulByNonresidue().add(a2),\n            a.add(b).square().subtract(a2).subtract(b2),\n        ];\n    }\n    cyclotomicSquare() {\n        const [c0, c1] = this.c;\n        const [c0c0, c0c1, c0c2] = c0.c;\n        const [c1c0, c1c1, c1c2] = c1.c;\n        let [t3, t4] = this.Fp4Square(c0c0, c1c1);\n        let [t5, t6] = this.Fp4Square(c1c0, c0c2);\n        let [t7, t8] = this.Fp4Square(c0c1, c1c2);\n        let t9 = t8.mulByNonresidue();\n        return new Fp12([\n            new Fp6([\n                t3.subtract(c0c0).multiply(2n).add(t3),\n                t5.subtract(c0c1).multiply(2n).add(t5),\n                t7.subtract(c0c2).multiply(2n).add(t7),\n            ]),\n            new Fp6([\n                t9.add(c1c0).multiply(2n).add(t9),\n                t4.add(c1c1).multiply(2n).add(t4),\n                t6.add(c1c2).multiply(2n).add(t6),\n            ]),\n        ]);\n    }\n    cyclotomicExp(n) {\n        let z = Fp12.ONE;\n        for (let i = BLS_X_LEN - 1; i >= 0; i--) {\n            z = z.cyclotomicSquare();\n            if (bitGet(n, i))\n                z = z.multiply(this);\n        }\n        return z;\n    }\n    finalExponentiate() {\n        const { x } = exports.CURVE;\n        const t0 = this.frobeniusMap(6).div(this);\n        const t1 = t0.frobeniusMap(2).multiply(t0);\n        const t2 = t1.cyclotomicExp(x).conjugate();\n        const t3 = t1.cyclotomicSquare().conjugate().multiply(t2);\n        const t4 = t3.cyclotomicExp(x).conjugate();\n        const t5 = t4.cyclotomicExp(x).conjugate();\n        const t6 = t5.cyclotomicExp(x).conjugate().multiply(t2.cyclotomicSquare());\n        const t7 = t6.cyclotomicExp(x).conjugate();\n        const t2_t5_pow_q2 = t2.multiply(t5).frobeniusMap(2);\n        const t4_t1_pow_q3 = t4.multiply(t1).frobeniusMap(3);\n        const t6_t1c_pow_q1 = t6.multiply(t1.conjugate()).frobeniusMap(1);\n        const t7_t3c_t1 = t7.multiply(t3.conjugate()).multiply(t1);\n        return t2_t5_pow_q2.multiply(t4_t1_pow_q3).multiply(t6_t1c_pow_q1).multiply(t7_t3c_t1);\n    }\n}\nexports.Fp12 = Fp12;\nFp12.ZERO = new Fp12([Fp6.ZERO, Fp6.ZERO]);\nFp12.ONE = new Fp12([Fp6.ONE, Fp6.ZERO]);\nclass ProjectivePoint {\n    constructor(x, y, z, C) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.C = C;\n    }\n    isZero() {\n        return this.z.isZero();\n    }\n    createPoint(x, y, z) {\n        return new this.constructor(x, y, z);\n    }\n    getZero() {\n        return this.createPoint(this.C.ONE, this.C.ONE, this.C.ZERO);\n    }\n    equals(rhs) {\n        if (this.constructor !== rhs.constructor)\n            throw new Error(`ProjectivePoint#equals: this is ${this.constructor}, but rhs is ${rhs.constructor}`);\n        const a = this;\n        const b = rhs;\n        const xe = a.x.multiply(b.z).equals(b.x.multiply(a.z));\n        const ye = a.y.multiply(b.z).equals(b.y.multiply(a.z));\n        return xe && ye;\n    }\n    negate() {\n        return this.createPoint(this.x, this.y.negate(), this.z);\n    }\n    toString(isAffine = true) {\n        if (!isAffine) {\n            return `Point<x=${this.x}, y=${this.y}, z=${this.z}>`;\n        }\n        const [x, y] = this.toAffine();\n        return `Point<x=${x}, y=${y}>`;\n    }\n    fromAffineTuple(xy) {\n        return this.createPoint(xy[0], xy[1], this.C.ONE);\n    }\n    toAffine(invZ = this.z.invert()) {\n        return [this.x.multiply(invZ), this.y.multiply(invZ)];\n    }\n    toAffineBatch(points) {\n        const toInv = genInvertBatch(this.C, points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    normalizeZ(points) {\n        return this.toAffineBatch(points).map((t) => this.fromAffineTuple(t));\n    }\n    double() {\n        const { x, y, z } = this;\n        const W = x.multiply(x).multiply(3n);\n        const S = y.multiply(z);\n        const SS = S.multiply(S);\n        const SSS = SS.multiply(S);\n        const B = x.multiply(y).multiply(S);\n        const H = W.multiply(W).subtract(B.multiply(8n));\n        const X3 = H.multiply(S).multiply(2n);\n        const Y3 = W.multiply(B.multiply(4n).subtract(H)).subtract(y.multiply(y).multiply(8n).multiply(SS));\n        const Z3 = SSS.multiply(8n);\n        return this.createPoint(X3, Y3, Z3);\n    }\n    add(rhs) {\n        if (this.constructor !== rhs.constructor)\n            throw new Error(`ProjectivePoint#add: this is ${this.constructor}, but rhs is ${rhs.constructor}`);\n        const p1 = this;\n        const p2 = rhs;\n        if (p1.isZero())\n            return p2;\n        if (p2.isZero())\n            return p1;\n        const X1 = p1.x;\n        const Y1 = p1.y;\n        const Z1 = p1.z;\n        const X2 = p2.x;\n        const Y2 = p2.y;\n        const Z2 = p2.z;\n        const U1 = Y2.multiply(Z1);\n        const U2 = Y1.multiply(Z2);\n        const V1 = X2.multiply(Z1);\n        const V2 = X1.multiply(Z2);\n        if (V1.equals(V2) && U1.equals(U2))\n            return this.double();\n        if (V1.equals(V2))\n            return this.getZero();\n        const U = U1.subtract(U2);\n        const V = V1.subtract(V2);\n        const VV = V.multiply(V);\n        const VVV = VV.multiply(V);\n        const V2VV = V2.multiply(VV);\n        const W = Z1.multiply(Z2);\n        const A = U.multiply(U).multiply(W).subtract(VVV).subtract(V2VV.multiply(2n));\n        const X3 = V.multiply(A);\n        const Y3 = U.multiply(V2VV.subtract(A)).subtract(VVV.multiply(U2));\n        const Z3 = VVV.multiply(W);\n        return this.createPoint(X3, Y3, Z3);\n    }\n    subtract(rhs) {\n        if (this.constructor !== rhs.constructor)\n            throw new Error(`ProjectivePoint#subtract: this is ${this.constructor}, but rhs is ${rhs.constructor}`);\n        return this.add(rhs.negate());\n    }\n    validateScalar(n) {\n        if (typeof n === 'number')\n            n = BigInt(n);\n        if (typeof n !== 'bigint' || n <= 0 || n > exports.CURVE.r) {\n            throw new Error(`Point#multiply: invalid scalar, expected positive integer < CURVE.r. Got: ${n}`);\n        }\n        return n;\n    }\n    multiplyUnsafe(scalar) {\n        let n = this.validateScalar(scalar);\n        let point = this.getZero();\n        let d = this;\n        while (n > 0n) {\n            if (n & 1n)\n                point = point.add(d);\n            d = d.double();\n            n >>= 1n;\n        }\n        return point;\n    }\n    multiply(scalar) {\n        let n = this.validateScalar(scalar);\n        let point = this.getZero();\n        let fake = this.getZero();\n        let d = this;\n        let bits = Fp.ORDER;\n        while (bits > 0n) {\n            if (n & 1n) {\n                point = point.add(d);\n            }\n            else {\n                fake = fake.add(d);\n            }\n            d = d.double();\n            n >>= 1n;\n            bits >>= 1n;\n        }\n        return point;\n    }\n    maxBits() {\n        return this.C.MAX_BITS;\n    }\n    precomputeWindow(W) {\n        const windows = Math.ceil(this.maxBits() / W);\n        const windowSize = 2 ** (W - 1);\n        let points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < windowSize; i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    calcMultiplyPrecomputes(W) {\n        if (this._MPRECOMPUTES)\n            throw new Error('This point already has precomputes');\n        this._MPRECOMPUTES = [W, this.normalizeZ(this.precomputeWindow(W))];\n    }\n    clearMultiplyPrecomputes() {\n        this._MPRECOMPUTES = undefined;\n    }\n    wNAF(n) {\n        let W, precomputes;\n        if (this._MPRECOMPUTES) {\n            [W, precomputes] = this._MPRECOMPUTES;\n        }\n        else {\n            W = 1;\n            precomputes = this.precomputeWindow(W);\n        }\n        let [p, f] = [this.getZero(), this.getZero()];\n        const windows = Math.ceil(this.maxBits() / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += 1n;\n            }\n            if (wbits === 0) {\n                f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n            }\n            else {\n                const cached = precomputes[offset + Math.abs(wbits) - 1];\n                p = p.add(wbits < 0 ? cached.negate() : cached);\n            }\n        }\n        return [p, f];\n    }\n    multiplyPrecomputed(scalar) {\n        return this.wNAF(this.validateScalar(scalar))[0];\n    }\n}\nexports.ProjectivePoint = ProjectivePoint;\nfunction sgn0(x) {\n    const [x0, x1] = x.values;\n    const sign_0 = x0 % 2n;\n    const zero_0 = x0 === 0n;\n    const sign_1 = x1 % 2n;\n    return BigInt(sign_0 || (zero_0 && sign_1));\n}\nconst P_MINUS_9_DIV_16 = (exports.CURVE.P ** 2n - 9n) / 16n;\nfunction sqrt_div_fp2(u, v) {\n    const v7 = v.pow(7n);\n    const uv7 = u.multiply(v7);\n    const uv15 = uv7.multiply(v7.multiply(v));\n    const gamma = uv15.pow(P_MINUS_9_DIV_16).multiply(uv7);\n    let success = false;\n    let result = gamma;\n    const positiveRootsOfUnity = FP2_ROOTS_OF_UNITY.slice(0, 4);\n    for (const root of positiveRootsOfUnity) {\n        const candidate = root.multiply(gamma);\n        if (candidate.pow(2n).multiply(v).subtract(u).isZero() && !success) {\n            success = true;\n            result = candidate;\n        }\n    }\n    return [success, result];\n}\nfunction map_to_curve_simple_swu_9mod16(t) {\n    const iso_3_a = new Fp2([0n, 240n]);\n    const iso_3_b = new Fp2([1012n, 1012n]);\n    const iso_3_z = new Fp2([-2n, -1n]);\n    if (Array.isArray(t))\n        t = new Fp2(t);\n    const t2 = t.pow(2n);\n    const iso_3_z_t2 = iso_3_z.multiply(t2);\n    const ztzt = iso_3_z_t2.add(iso_3_z_t2.pow(2n));\n    let denominator = iso_3_a.multiply(ztzt).negate();\n    let numerator = iso_3_b.multiply(ztzt.add(Fp2.ONE));\n    if (denominator.isZero())\n        denominator = iso_3_z.multiply(iso_3_a);\n    let v = denominator.pow(3n);\n    let u = numerator\n        .pow(3n)\n        .add(iso_3_a.multiply(numerator).multiply(denominator.pow(2n)))\n        .add(iso_3_b.multiply(v));\n    const [success, sqrtCandidateOrGamma] = sqrt_div_fp2(u, v);\n    let y;\n    if (success)\n        y = sqrtCandidateOrGamma;\n    const sqrtCandidateX1 = sqrtCandidateOrGamma.multiply(t.pow(3n));\n    u = iso_3_z_t2.pow(3n).multiply(u);\n    let success2 = false;\n    for (const eta of FP2_ETAs) {\n        const etaSqrtCandidate = eta.multiply(sqrtCandidateX1);\n        const temp = etaSqrtCandidate.pow(2n).multiply(v).subtract(u);\n        if (temp.isZero() && !success && !success2) {\n            y = etaSqrtCandidate;\n            success2 = true;\n        }\n    }\n    if (!success && !success2)\n        throw new Error('Hash to Curve - Optimized SWU failure');\n    if (success2)\n        numerator = numerator.multiply(iso_3_z_t2);\n    y = y;\n    if (sgn0(t) !== sgn0(y))\n        y = y.negate();\n    y = y.multiply(denominator);\n    return [numerator, y, denominator];\n}\nexports.map_to_curve_simple_swu_9mod16 = map_to_curve_simple_swu_9mod16;\nfunction isogenyMapG2(xyz) {\n    const [x, y, z] = xyz;\n    const zz = z.multiply(z);\n    const zzz = zz.multiply(z);\n    const zPowers = [z, zz, zzz];\n    const mapped = [Fp2.ZERO, Fp2.ZERO, Fp2.ZERO, Fp2.ZERO];\n    for (let i = 0; i < ISOGENY_COEFFICIENTS.length; i++) {\n        const k_i = ISOGENY_COEFFICIENTS[i];\n        mapped[i] = k_i.slice(-1)[0];\n        const arr = k_i.slice(0, -1).reverse();\n        for (let j = 0; j < arr.length; j++) {\n            const k_i_j = arr[j];\n            mapped[i] = mapped[i].multiply(x).add(zPowers[j].multiply(k_i_j));\n        }\n    }\n    mapped[2] = mapped[2].multiply(y);\n    mapped[3] = mapped[3].multiply(z);\n    const z2 = mapped[1].multiply(mapped[3]);\n    const x2 = mapped[0].multiply(mapped[3]);\n    const y2 = mapped[1].multiply(mapped[2]);\n    return [x2, y2, z2];\n}\nexports.isogenyMapG2 = isogenyMapG2;\nfunction calcPairingPrecomputes(x, y) {\n    const [Qx, Qy, Qz] = [x, y, Fp2.ONE];\n    let [Rx, Ry, Rz] = [Qx, Qy, Qz];\n    let ell_coeff = [];\n    for (let i = BLS_X_LEN - 2; i >= 0; i--) {\n        let t0 = Ry.square();\n        let t1 = Rz.square();\n        let t2 = t1.multiply(3n).multiplyByB();\n        let t3 = t2.multiply(3n);\n        let t4 = Ry.add(Rz).square().subtract(t1).subtract(t0);\n        ell_coeff.push([\n            t2.subtract(t0),\n            Rx.square().multiply(3n),\n            t4.negate(),\n        ]);\n        Rx = t0.subtract(t3).multiply(Rx).multiply(Ry).div(2n);\n        Ry = t0.add(t3).div(2n).square().subtract(t2.square().multiply(3n));\n        Rz = t0.multiply(t4);\n        if (bitGet(exports.CURVE.x, i)) {\n            let t0 = Ry.subtract(Qy.multiply(Rz));\n            let t1 = Rx.subtract(Qx.multiply(Rz));\n            ell_coeff.push([\n                t0.multiply(Qx).subtract(t1.multiply(Qy)),\n                t0.negate(),\n                t1,\n            ]);\n            let t2 = t1.square();\n            let t3 = t2.multiply(t1);\n            let t4 = t2.multiply(Rx);\n            let t5 = t3.subtract(t4.multiply(2n)).add(t0.square().multiply(Rz));\n            Rx = t1.multiply(t5);\n            Ry = t4.subtract(t5).multiply(t0).subtract(t3.multiply(Ry));\n            Rz = Rz.multiply(t3);\n        }\n    }\n    return ell_coeff;\n}\nexports.calcPairingPrecomputes = calcPairingPrecomputes;\nfunction millerLoop(ell, g1) {\n    let f12 = Fp12.ONE;\n    const [x, y] = g1;\n    const [Px, Py] = [x, y];\n    for (let j = 0, i = BLS_X_LEN - 2; i >= 0; i--, j++) {\n        f12 = f12.multiplyBy014(ell[j][0], ell[j][1].multiply(Px.value), ell[j][2].multiply(Py.value));\n        if (bitGet(exports.CURVE.x, i)) {\n            j += 1;\n            f12 = f12.multiplyBy014(ell[j][0], ell[j][1].multiply(Px.value), ell[j][2].multiply(Py.value));\n        }\n        if (i !== 0)\n            f12 = f12.square();\n    }\n    return f12.conjugate();\n}\nexports.millerLoop = millerLoop;\nconst ut_root = new Fp6([Fp2.ZERO, Fp2.ONE, Fp2.ZERO]);\nconst wsq = new Fp12([ut_root, Fp6.ZERO]);\nconst wsq_inv = wsq.invert();\nconst wcu = new Fp12([Fp6.ZERO, ut_root]);\nconst wcu_inv = wcu.invert();\nfunction psi(x, y) {\n    const x2 = wsq_inv.multiplyByFp2(x).frobeniusMap(1).multiply(wsq).c[0].c[0];\n    const y2 = wcu_inv.multiplyByFp2(y).frobeniusMap(1).multiply(wcu).c[0].c[0];\n    return [x2, y2];\n}\nexports.psi = psi;\nfunction psi2(x, y) {\n    return [x.multiply(PSI2_C1), y.negate()];\n}\nexports.psi2 = psi2;\nconst PSI2_C1 = 0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn;\nconst rv1 = 0x6af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n;\nconst ev1 = 0x699be3b8c6870965e5bf892ad5d2cc7b0e85a117402dfd83b7f4a947e02d978498255a2aaec0ac627b5afbdf1bf1c90n;\nconst ev2 = 0x8157cd83046453f5dd0972b6e3949e4288020b5b8a9cc99ca07e27089a2ce2436d965026adad3ef7baba37f2183e9b5n;\nconst ev3 = 0xab1c2ffdd6c253ca155231eb3e71ba044fd562f6f72bc5bad5ec46a0b7a3b0247cf08ce6c6317f40edbc653a72dee17n;\nconst ev4 = 0xaa404866706722864480885d68ad0ccac1967c7544b447873cc37e0181271e006df72162a3d3e0287bf597fbf7f8fc1n;\nconst FP2_FROBENIUS_COEFFICIENTS = [\n    0x1n,\n    0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaan,\n].map((item) => new Fp(item));\nconst FP2_ROOTS_OF_UNITY = [\n    [1n, 0n],\n    [rv1, -rv1],\n    [0n, 1n],\n    [rv1, rv1],\n    [-1n, 0n],\n    [-rv1, rv1],\n    [0n, -1n],\n    [-rv1, -rv1],\n].map((pair) => new Fp2(pair));\nconst FP2_ETAs = [\n    [ev1, ev2],\n    [-ev2, ev1],\n    [ev3, ev4],\n    [-ev4, ev3],\n].map((pair) => new Fp2(pair));\nconst FP6_FROBENIUS_COEFFICIENTS_1 = [\n    [0x1n, 0x0n],\n    [\n        0x0n,\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn,\n    ],\n    [\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen,\n        0x0n,\n    ],\n    [0x0n, 0x1n],\n    [\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn,\n        0x0n,\n    ],\n    [\n        0x0n,\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen,\n    ],\n].map((pair) => new Fp2(pair));\nconst FP6_FROBENIUS_COEFFICIENTS_2 = [\n    [0x1n, 0x0n],\n    [\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaadn,\n        0x0n,\n    ],\n    [\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn,\n        0x0n,\n    ],\n    [\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaan,\n        0x0n,\n    ],\n    [\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen,\n        0x0n,\n    ],\n    [\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffffn,\n        0x0n,\n    ],\n].map((pair) => new Fp2(pair));\nconst FP12_FROBENIUS_COEFFICIENTS = [\n    [0x1n, 0x0n],\n    [\n        0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8n,\n        0x00fc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3n,\n    ],\n    [\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffffn,\n        0x0n,\n    ],\n    [\n        0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2n,\n        0x06af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n,\n    ],\n    [\n        0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffen,\n        0x0n,\n    ],\n    [\n        0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995n,\n        0x05b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116n,\n    ],\n    [\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaan,\n        0x0n,\n    ],\n    [\n        0x00fc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3n,\n        0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8n,\n    ],\n    [\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaacn,\n        0x0n,\n    ],\n    [\n        0x06af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09n,\n        0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2n,\n    ],\n    [\n        0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaadn,\n        0x0n,\n    ],\n    [\n        0x05b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116n,\n        0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995n,\n    ],\n].map((pair) => new Fp2(pair));\nconst xnum = [\n    [\n        0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6n,\n        0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6n,\n    ],\n    [\n        0x0n,\n        0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71an,\n    ],\n    [\n        0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71en,\n        0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38dn,\n    ],\n    [\n        0x171d6541fa38ccfaed6dea691f5fb614cb14b4e7f4e810aa22d6108f142b85757098e38d0f671c7188e2aaaaaaaa5ed1n,\n        0x0n,\n    ],\n].map((pair) => new Fp2(pair));\nconst xden = [\n    [\n        0x0n,\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa63n,\n    ],\n    [\n        0xcn,\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa9fn,\n    ],\n    [0x1n, 0x0n],\n    [0x0n, 0x0n],\n].map((pair) => new Fp2(pair));\nconst ynum = [\n    [\n        0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706n,\n        0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706n,\n    ],\n    [\n        0x0n,\n        0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97ben,\n    ],\n    [\n        0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71cn,\n        0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38fn,\n    ],\n    [\n        0x124c9ad43b6cf79bfbf7043de3811ad0761b0f37a1e26286b0e977c69aa274524e79097a56dc4bd9e1b371c71c718b10n,\n        0x0n,\n    ],\n].map((pair) => new Fp2(pair));\nconst yden = [\n    [\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fbn,\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fbn,\n    ],\n    [\n        0x0n,\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa9d3n,\n    ],\n    [\n        0x12n,\n        0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa99n,\n    ],\n    [0x1n, 0x0n],\n].map((pair) => new Fp2(pair));\nconst ISOGENY_COEFFICIENTS = [xnum, xden, ynum, yden];\n","const { PointG2 } = require('@noble/bls12-381');\nconst ethers = window.ethers;\nconst LitJsSdk = window.LitJsSdk;\n\nconst ERC721ABI = [\n  {\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\n    name: 'ownerOf',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\nconst MirrorNFTABI = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'headerJson',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'payloadJson',\n        type: 'string',\n      },\n      {\n        internalType: 'bytes',\n        name: 'signature',\n        type: 'bytes',\n      },\n    ],\n    name: 'claim',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\nconst mNFT = new ethers.Contract(\n  '0x7fc2159a7fbf644b107cec6f57bc3e08a5f4219f',\n  MirrorNFTABI\n);\n\nfunction log(str) {\n  document.getElementById('log').innerHTML += `<p>${str}</p>`;\n}\nasync function main() {\n  if (!window.ethereum) {\n    const btn = document.querySelector('button');\n    btn.disabled = true;\n    btn.innerHTML = 'Wallet not Detected';\n    return;\n  }\n  const provider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n  const litNodeClient = new LitJsSdk.LitNodeClient();\n  await litNodeClient.connect();\n  console.log(litNodeClient);\n  window.lit = litNodeClient;\n\n  async function useCelo() {\n    const { chainId } = await provider.getNetwork();\n    if (chainId === 44787) return true;\n    log('Not on Celo Alfajores, switching');\n    const err = new Error('Not on Celo');\n    err.code = 1;\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0xaef3' }],\n      });\n      return true;\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [\n              {\n                chainId: '0xaef3',\n                chainName: 'Celo Alfajores Testnet',\n                nativeCurrency: {\n                  name: 'CELO',\n                  symbol: 'CELO',\n                  decimals: 18,\n                },\n                blockExplorerUrls: [\n                  'https://alfajores-blockscout.celo-testnet.org/',\n                ],\n                rpcUrls: ['https://alfajores-forno.celo-testnet.org'],\n              },\n            ],\n          });\n          await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: '0xaef3' }],\n          });\n          return true;\n        } catch (addError) {\n          throw err;\n        }\n      }\n      throw err;\n    }\n  }\n\n  async function obtainJWT(address, tokenId) {\n    if (address.length !== 42 || !address.startsWith('0x'))\n      throw new Error('Invalid address');\n    if (\n      typeof tokenId !== 'number' &&\n      !isFinite((tokenId = parseInt(tokenId))) &&\n      tokenId.match(/0x[0-9a-fA-F]+/)[0] !== tokenId\n    )\n      throw new Error('Invalid tokenId');\n    tokenId =\n      typeof tokenId === 'number' ? '0x' + tokenId.toString(16) : tokenId;\n    const callRequests = [\n      {\n        to: address,\n        data: LitJsSdk.encodeCallData({\n          abi: ERC721ABI,\n          functionName: 'tokenURI',\n          functionParams: [tokenId],\n        }),\n      },\n      {\n        to: address,\n        data: LitJsSdk.encodeCallData({\n          abi: ERC721ABI,\n          functionName: 'ownerOf',\n          functionParams: [tokenId],\n        }),\n      },\n    ];\n    const jwt = await litNodeClient.getSignedChainDataToken({\n      callRequests,\n      chain: 'ethereum',\n    });\n    const { verified, header, payload, signature } = LitJsSdk.verifyJwt({\n      jwt,\n    });\n    if (!verified) throw Error('JWT invalid');\n\n    return { header, payload, signature };\n  }\n\n  async function claimOnCelo(header, payload, signature) {\n    await useCelo();\n    const signatureB = Array.from(signature)\n      .map((e) => ('0' + e.toString(16)).slice(-2))\n      .join('');\n    const signatureG2 = PointG2.fromSignature(signatureB);\n    const signatureSlices = signatureG2.toHex().match(/.{1,96}/g);\n    const pad = '00000000000000000000000000000000';\n    const signatureParameter =\n      '0x' +\n      pad +\n      signatureSlices[1] +\n      pad +\n      signatureSlices[0] +\n      pad +\n      signatureSlices[3] +\n      pad +\n      signatureSlices[2];\n    log('Start claiming...');\n    let acc;\n    try {\n      await provider.send('eth_requestAccounts', []);\n      acc = provider.getSigner();\n    } catch (err) {\n      log('Wallet connection was rejected');\n      throw new Error('Wallet connection was rejected');\n    }\n\n    try {\n      const tx = await mNFT\n        .connect(acc)\n        .claim(\n          JSON.stringify(header),\n          JSON.stringify(payload),\n          signatureParameter\n        );\n      log(\n        `Claim tx submit, tx hash: <a href=\"https://alfajores-blockscout.celo-testnet.org/tx/${tx.hash}\" target=\"_blank\" rel=\"noopener noreferrer\">${tx.hash}</a>`\n      );\n\n      log('Claim successed');\n    } catch (err) {\n      console.log(err);\n      log('Claim failed, not sure why');\n      throw new Error('Claim failed, not sure why');\n    }\n  }\n\n  document.addEventListener(\n    'lit-ready',\n    function (e) {\n      window.execute = async function () {\n        const address = document.getElementById('address').value;\n        const tokenId = document.getElementById('token').value;\n        log(\n          `Start mirroring NFT from Ethereum to Celo Alfajores, target token: ${address} - ${tokenId}`\n        );\n\n        let decoded;\n        try {\n          decoded = await obtainJWT(address, tokenId);\n        } catch (err) {\n          log(\n            'Cannot derive data from Lit Protocol, please check the token is a ERC721 and on Ethereum or try again later'\n          );\n          return;\n        }\n        log('Successfully derive data from Lit Protocol');\n\n        try {\n          await claimOnCelo(decoded.header, decoded.payload, decoded.signature);\n        } catch (err) {\n          if (err.code === 1) log('Switch to Celo Alfajores failed');\n        }\n      };\n    },\n    false\n  );\n}\n\nwindow.addEventListener('load', main);\n"],"names":["Object","defineProperty","$003265b3c04d69da$exports","value","verifyBatch","aggregateSignatures","aggregatePublicKeys","verify","sign","getPublicKey","pairing","PointG2","PointG1","utils","CURVE","Fp12","Fp2","Fr","Fp","$065d5f175740be15$exports","psi2","psi","millerLoop","calcPairingPrecomputes","isogenyMapG2","map_to_curve_simple_swu_9mod16","ProjectivePoint","Fp6","powMod","mod","P","r","h","Gx","Gy","b","P2","h2","G2x","G2y","b2","x","h2Eff","$065d5f175740be15$var$BLS_X_LEN","$065d5f175740be15$var$bitLen","$065d5f175740be15$var$mod","a","res","$065d5f175740be15$var$powMod","power","modulo","n","len","$065d5f175740be15$var$bitGet","pos","BigInt","$065d5f175740be15$var$invert","number","Error","y","u","v","q","m","$065d5f175740be15$var$Fp","this","ORDER","isZero","equals","rhs","negate","invert","add","rhs1","square","pow","sqrt","root","subtract","rhs2","multiply","rhs3","div","rhs4","toString","str","padStart","slice","MAX_BITS","ZERO","ONE","$065d5f175740be15$var$Fr","value1","rhs5","rhs6","n1","rhs7","rhs8","rhs9","legendre","s","z","c","t","t2","i","$065d5f175740be15$var$FQP","zip","rhs10","mapper","c0","c1","length","push","map","callbackfn","every","rhs11","left","right","init","rhs12","rhs13","conjugate","one","el","$065d5f175740be15$var$Fp2","$065d5f175740be15$var$Fp6","$065d5f175740be15$var$Fp12","n2","p","d","rhs14","inv","coeffs","super","forEach","tuple","values","rhs15","r0","r1","t1","mulByNonresidue","candidateSqrt","check","R","$065d5f175740be15$var$FP2_ROOTS_OF_UNITY","divisor","find","index","indexOf","x1","x2","re1","im1","re2","im2","factor","frobeniusMap","$065d5f175740be15$var$FP2_FROBENIUS_COEFFICIENTS","multiplyByB","t0","Array","isArray","triple","TypeError","rhs16","c2","r2","multiplyBy1","b1","multiplyBy01","b0","b11","multiplyByFp2","rhs17","t3","t4","power1","$065d5f175740be15$var$FP6_FROBENIUS_COEFFICIENTS_1","$065d5f175740be15$var$FP6_FROBENIUS_COEFFICIENTS_2","c3","fromTuple","rhs18","multiplyBy014","o0","o1","o4","rhs19","ab","power2","c1_0","c1_1","c1_2","coeff","$065d5f175740be15$var$FP12_FROBENIUS_COEFFICIENTS","Fp4Square","a2","b21","cyclotomicSquare","c0c0","c0c1","c0c2","c1c0","c1c1","c1c2","t5","t6","t7","t8","t9","cyclotomicExp","n3","finalExponentiate","t2_t5_pow_q2","t4_t1_pow_q3","t6_t1c_pow_q1","t7_t3c_t1","$065d5f175740be15$var$sgn0","x0","y2","z3","C","createPoint","y1","z1","constructor","getZero","rhs20","xe","ye","isAffine","toAffine","fromAffineTuple","xy","invZ","toAffineBatch","points","toInv","cls","nums","scratch","acc","i1","tmp","$065d5f175740be15$var$genInvertBatch","normalizeZ","points1","double","W","S","SS","SSS","B","H","X3","Y3","Z3","rhs21","p1","p2","X1","Y1","Z1","X2","Y2","Z2","U1","U2","V1","V2","U","V","VV","VVV","V2VV","A","rhs22","validateScalar","n4","multiplyUnsafe","scalar","point","scalar1","fake","bits","maxBits","precomputeWindow","windows","Math","ceil","windowSize","base","window","calcMultiplyPrecomputes","W1","_MPRECOMPUTES","clearMultiplyPrecomputes","undefined","wNAF","n5","precomputes","f","mask","maxNumber","shiftBy","offset","wbits","Number","cached","abs","multiplyPrecomputed","scalar2","$065d5f175740be15$var$P_MINUS_9_DIV_16","iso_3_a","iso_3_b","iso_3_z","iso_3_z_t2","ztzt","denominator","numerator","success","sqrtCandidateOrGamma","v7","uv7","gamma","result","positiveRootsOfUnity","candidate","$065d5f175740be15$var$sqrt_div_fp2","sqrtCandidateX1","success2","eta","$065d5f175740be15$var$FP2_ETAs","etaSqrtCandidate","xyz","zz","zzz","zPowers","mapped","$065d5f175740be15$var$ISOGENY_COEFFICIENTS","k_i","arr","reverse","j","k_i_j","z2","Qx","Qy","Qz","Rx","Ry","Rz","ell_coeff","ell","g1","f12","Px","Py","$065d5f175740be15$var$ut_root","$065d5f175740be15$var$wsq","$065d5f175740be15$var$wsq_inv","$065d5f175740be15$var$wcu","$065d5f175740be15$var$wcu_inv","$065d5f175740be15$var$PSI2_C1","$065d5f175740be15$var$rv1","$065d5f175740be15$var$ev1","$065d5f175740be15$var$ev2","$065d5f175740be15$var$ev3","$065d5f175740be15$var$ev4","item","pair","enumerable","get","$003265b3c04d69da$var$POW_2_381","$003265b3c04d69da$var$POW_2_382","$003265b3c04d69da$var$POW_2_383","$003265b3c04d69da$var$htfDefaults","DST","k","expand","$003265b3c04d69da$var$isWithinCurveOrder","num","$003265b3c04d69da$var$crypto","webCrypto","self","crypto","node","parcelRequire","web","$003265b3c04d69da$var$bytesToNumberBE","bytes","$003265b3c04d69da$var$bytesToHex","uint8a","hex","$003265b3c04d69da$var$hexToBytes","array","Uint8Array","parseInt","$003265b3c04d69da$var$toPaddedHex","padding","$003265b3c04d69da$var$ensureBytes","$003265b3c04d69da$var$concatBytes","arrays","reduce","pad","set","$003265b3c04d69da$var$os2ip","$003265b3c04d69da$var$i2osp","from","fill","$003265b3c04d69da$var$strxor","$003265b3c04d69da$var$hash_to_field","msg","count","options","htfOptions","log2p","L","len_in_bytes","charCodeAt","$003265b3c04d69da$var$stringToBytes","pseudo_random_bytes","lenInBytes","sha256","DST_prime","Z_pad","b_in_bytes","l_i_b_str","b_0","args","$003265b3c04d69da$var$expand_message_xmd","e","elm_offset","tv","$003265b3c04d69da$var$normalizePrivKey","key","int","isSafeInteger","$003265b3c04d69da$var$assertType","type","hashToField","randomBytes","bytesLength","getRandomValues","buffer","randomPrivateKey","b32","async","message","subtle","digest","createHash","update","getDSTLabel","setDSTLabel","newLabel","$003265b3c04d69da$var$PointG1","bytes2","compressedValue","aflag","assertValidity","privateKey2","BASE","toRawBytes","isCompressed","toHex","isCompressed1","flag","padEnd","isOnCurve","isTorsionFree","Symbol","for","P1","pairingPrecomputes","clearCofactor","sigma","Q","S2","$003265b3c04d69da$var$PointG2","Q0","Q1","hex1","half","y0","aflag1","bytes1","privateKey1","toSignature","isCompressed2","isCompressed3","mulNegX","clearPairingPrecomputes","_PPRECOMPUTES","$003265b3c04d69da$var$pairing","withFinalExponent","looped","$003265b3c04d69da$var$normP1","fromHex","$003265b3c04d69da$var$normP2","fromSignature","$003265b3c04d69da$var$normP2Hash","hashToCurve","privateKey","fromPrivateKey","msgPoint","sigPoint","signature","publicKey","Hm","G","ePHm","publicKeys","agg","sum","signatures","messages","sig","nMessages","Promise","all","nPublicKeys","paired","Set","groupPublicKey1","groupPublicKey","subMessage","product","$f4a65e1399650cab$var$ethers","ethers","$f4a65e1399650cab$var$LitJsSdk","LitJsSdk","$f4a65e1399650cab$var$ERC721ABI","inputs","internalType","name","outputs","stateMutability","$f4a65e1399650cab$var$mNFT","Contract","$f4a65e1399650cab$var$log","document","getElementById","innerHTML","addEventListener","ethereum","btn","querySelector","disabled","provider","providers","Web3Provider","litNodeClient","LitNodeClient","claimOnCelo","header","payload","chainId","getNetwork","err","code","request","method","params","switchError","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","rpcUrls","addError","useCelo","signatureB","join","signatureSlices","$f4a65e1399650cab$require$PointG2","match","signatureParameter","send","getSigner","tx","connect","claim","JSON","stringify","hash","err1","console","log","lit","execute","address","tokenId","decoded","startsWith","isFinite","callRequests","to","data","encodeCallData","abi","functionName","functionParams","jwt","getSignedChainDataToken","chain","verified","verifyJwt","obtainJWT","err2"],"version":3,"file":"index.fc912da1.js.map"}